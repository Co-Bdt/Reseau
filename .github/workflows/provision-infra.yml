# This workflow will provision the project infrastructure by running Terraform and configure the cluster

name: Provision Infra

on:
  [workflow_dispatch]

env:
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_LOCATION: europe-west1
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: europe-west1-b
  REGISTRY: ghcr.io
  TOKEN: ${{ secrets.ACTIONS_ACCESS_TOKEN }}
  TERRAFORM_VERSION: 1.9.2

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main

    # Configure Workload Identity Federation and generate an access token.
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

    # Install and setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "${{ env.TERRAFORM_VERSION }}"

    - name: Terraform Init
      working-directory: terraform/prod/
      run: |-
        terraform init

    # Plan changes to be applied by Terraform
    - name: Plan changes
      working-directory: terraform/prod/
      run: |-
        terraform plan -out tfplan -var project_id=$PROJECT_ID

    # Save plan to GH Artifacts to retrieve it in the next job
    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.run_id }}-tf-plan
        path: tf-plan
        retention-days: 1

  terraform-apply:
      name: Terraform Apply
      runs-on: ubuntu-latest
      environment: production
      permissions:
        contents: 'read'
        id-token: 'write'
      needs: [terraform-plan]
  
      steps:
      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ env.TOKEN }}
          approvers: Co-Bdt
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}-tf-plan
          path: .
          github_token: ${{ env.TOKEN }}
  
      - name: Apply changes
        working-directory: terraform/prod/
        run: |-
          terraform version
          ls -la
          #terraform apply tfplan -var project_id=$PROJECT_ID

  configuration:
    name: Configuration
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'
    needs: [terraform-apply]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ env.TOKEN }}

    # Authenticate and connect to GCloud and GKE
    - name: GCloud and GKE setup
      uses: ./.github/gcloud-gke-setup
      with:
        WORKLOAD_IDENTITY_PROVIDER_ID: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        PROJECT_ID: ${{ env.PROJECT_ID }}
        GCP_LOCATION: ${{ env.GCP_LOCATION }}
        GKE_CLUSTER_NAME: ${{ env.GKE_CLUSTER_NAME }}

    # Create the Secret for pulling images with Docker config file
    - name: Create Docker config Secret
      run: |-
        kubectl create secret docker-registry reseau-dockerconfig-secret \
          --from-file=.dockerconfigjson=/home/$USER/.docker/config.json
